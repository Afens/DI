<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bT1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAAFSAAABUgGEG+ENAAAAGXRFWHRTb2Z0d2FyZQB3d3cu
        aW5rc2NhcGUub3Jnm+48GgAABHdJREFUSEullsdrlUEUxZPvJTEB48q4Mtkp1rXGDvYCIrgTS1RULGB3
        GyOCGnvZWcHyH9hrjLqx7Y1oBFOMmgiCiSt/Z+Z+4zxffHnigcN3z7lT3tQ3RQUiU1JSMhUezmQyz2An
        /GlU/IxcI5yisr7K/6EiSZLd1vgneA6upIPZZWVlY0XFeKvgedgFO6mzi7rlvol/BA0shR/gczhfls/k
        BUUzC+j4Jd9WuMT8gpAwiv1U6obL0MXe/ick1F0Oe2irAT1gG6pwDb4hHu2tLOhH1TKiDXzrRcWlpaUT
        lfNFsjCGtlrgFeK/d24jVadDvRMwhNw+ch3wM7wOtaai4i+wnTIaXaWvElBFrsVyuSCpNe0mzBopFebg
        a2M9JJ6J1d9ak3KbrAl2Es8y30GbEL8H5qx5BaY2ktY0AL0GfocrzRoQlF1tdVab5YBeAVsJf+921mkP
        fKXQO2Gk3/lOMytFDWW34J8QiTfjVfuUB/4MqzvbLIGiyQu407Q7ApqeeaaFIXia3nikmpUz8Ae8Q/mj
        omLzTlEmjAatkXcShjVHL4AdhIl+3TREl3yXBXjaSI9MCur0CXxMPMJbWRhp+WbiCm+5jh7TVrypsDJd
        eJPVyRHEWUsIOlId+GGDoDVSdTrIO/2inDJP4WnT6XK1E4YlRF/AP6RAd2+YUsxJ6C8KvVNUg/7BNx7p
        MNZqm6jYWw6jrGy65qXor3bOHdB18ImCT3QWNgGNbcC7YVJ6M/qOSWEYug3ehLfgR7wqn3IN36fOJpPS
        KrPOZDoLHUr0ocd42yUa8M6ZVP4kXqNJ/ZBteDdNKn8bb6tJ1demO25S+fPoepM60+Pwel3HOuDmq2K9
        CpuU1rE5YjLt+JbJ/jo+JppUXmsadzwez3WsoxRP9Xq8MCK0pvquSUFT/RHeNv451Q+os9Gk9F+nWjsx
        3ly16HhzVaO1YUZ66VClUdpIQ6dgtJUd7qXbXN1srgmm1Z82V7M6aiQIUwt0nHThh1lAn3KFBz5Oeomc
        MK225+K1EcbH6RL+ASWnID7jpSOUpw3WZFLQBdIMnxKP8lYWdIx0LHXW49urmbbC+gIsd4HUpkJPG70y
        UlSaV2da0IhOQ12Pd6nsNhHxPXnEGmnc6Vqo6zG+MhfC3xcKa7ULvg4GoKFZFNJFP92sFNXaPPjHRcV4
        6Zo64Kd/EvobTUHR5CXcbtpBo9EbablpB3T6FxePPC8oq5Hm1EHrQfiOMHufYC6BPYThMhH41fqD17Q3
        KZblM1kg5Y6J9oHu+Xik6aXxDS42KxtU0KZqIYyPiFBpuXaoZ84NeMGoq/MrbKPMXsoO9lUC9PR5Sy7e
        ZDkoptBV2BLfZhESXfjk16khUbGd07A/UthI38LLyAFfmsU2Or2RVqBzGiwAugu0pt9spIU/kamkNW9l
        F77iu1CWz+QFRTOLqPOa73vY/5oWgHIa2UkD6bP2IqxjFHO0FCKxbiddg8qpTDt1dlA33y1XMPSQnwwP
        0bCeOPohfbDXYt1QB+EklfVV8qGo6BcUhfE+qH/S/QAAAABJRU5ErkJggg==
</value>
  </data>
</root>